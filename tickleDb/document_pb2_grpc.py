# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from tickleDb import document_pb2 as tickleDb_dot_document__pb2


class DocServiceStub(object):
  """*
  Doc service mainly concerns with the storage/search/bulk operations
  of one or multiple docs in JSON format.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetDoc = channel.unary_unary(
        '/com.mindtickle.storage.pb.tickleDb.DocService/GetDoc',
        request_serializer=tickleDb_dot_document__pb2.GetDocRequest.SerializeToString,
        response_deserializer=tickleDb_dot_document__pb2.Doc.FromString,
        )
    self.CreateDoc = channel.unary_unary(
        '/com.mindtickle.storage.pb.tickleDb.DocService/CreateDoc',
        request_serializer=tickleDb_dot_document__pb2.CreateDocRequest.SerializeToString,
        response_deserializer=tickleDb_dot_document__pb2.CreateDocResponse.FromString,
        )
    self.UpdateDoc = channel.unary_unary(
        '/com.mindtickle.storage.pb.tickleDb.DocService/UpdateDoc',
        request_serializer=tickleDb_dot_document__pb2.UpdateDocRequest.SerializeToString,
        response_deserializer=tickleDb_dot_document__pb2.UpdateDocResponse.FromString,
        )
    self.DeleteDoc = channel.unary_unary(
        '/com.mindtickle.storage.pb.tickleDb.DocService/DeleteDoc',
        request_serializer=tickleDb_dot_document__pb2.DeleteDocRequest.SerializeToString,
        response_deserializer=tickleDb_dot_document__pb2.DeleteDocResponse.FromString,
        )
    self.SearchDocs = channel.unary_unary(
        '/com.mindtickle.storage.pb.tickleDb.DocService/SearchDocs',
        request_serializer=tickleDb_dot_document__pb2.SearchDocsRequest.SerializeToString,
        response_deserializer=tickleDb_dot_document__pb2.SearchDocsResponse.FromString,
        )
    self.UpsertDoc = channel.unary_unary(
        '/com.mindtickle.storage.pb.tickleDb.DocService/UpsertDoc',
        request_serializer=tickleDb_dot_document__pb2.UpsertDocRequest.SerializeToString,
        response_deserializer=tickleDb_dot_document__pb2.UpsertDocResponse.FromString,
        )
    self.GetDocsBySqlQuery = channel.unary_unary(
        '/com.mindtickle.storage.pb.tickleDb.DocService/GetDocsBySqlQuery',
        request_serializer=tickleDb_dot_document__pb2.GetDocsBySqlQueryRequest.SerializeToString,
        response_deserializer=tickleDb_dot_document__pb2.GetDocsBySqlQueryResponse.FromString,
        )
    self.UpdateDocsByQuery = channel.unary_unary(
        '/com.mindtickle.storage.pb.tickleDb.DocService/UpdateDocsByQuery',
        request_serializer=tickleDb_dot_document__pb2.UpdateDocsByQueryRequest.SerializeToString,
        response_deserializer=tickleDb_dot_document__pb2.UpdateDocsByQueryResponse.FromString,
        )
    self.DeleteDocsByQuery = channel.unary_unary(
        '/com.mindtickle.storage.pb.tickleDb.DocService/DeleteDocsByQuery',
        request_serializer=tickleDb_dot_document__pb2.DeleteDocsByQueryRequest.SerializeToString,
        response_deserializer=tickleDb_dot_document__pb2.DeleteDocsByQueryResponse.FromString,
        )
    self.ModifyDocs = channel.unary_unary(
        '/com.mindtickle.storage.pb.tickleDb.DocService/ModifyDocs',
        request_serializer=tickleDb_dot_document__pb2.ModifyDocsRequest.SerializeToString,
        response_deserializer=tickleDb_dot_document__pb2.ModifyDocsResponse.FromString,
        )


class DocServiceServicer(object):
  """*
  Doc service mainly concerns with the storage/search/bulk operations
  of one or multiple docs in JSON format.
  """

  def GetDoc(self, request, context):
    """*
    To fetch single doc by id for given collection and tenant.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CreateDoc(self, request, context):
    """*
    To create single doc. id must be provided in the request
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateDoc(self, request, context):
    """*
    To update single doc.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteDoc(self, request, context):
    """*
    To delete single doc.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SearchDocs(self, request, context):
    """*
    To search doc(s) based on provided query.
    Returns List of doc(s) that matches the given query.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpsertDoc(self, request, context):
    """*
    To upsert single doc. id must be present in request.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetDocsBySqlQuery(self, request, context):
    """*
    To retrieve multiple rows as a result of query execution.
    Since this accepts a string query, this can be used to do DB level joins spanning
    multiple collections.
    IMPORTANT: Since TickleDB does not support application-layer joins, this API assumes the request
    to be confined to a single node to be able to perform DB level joins.
    For documents with JSON values, if values are derived from json column, without giving an alias (i.e.
    using AS), the json extract statement itself is the column name. Eg:
    select name, data->>'$.scheduledBy' from task LEFT JOIN scheduled ON id=scheduleId; will have column names as
    name | data->>'$.scheduledBy'
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateDocsByQuery(self, request, context):
    """*
    To update doc(s) which matches given query.
    Returns no of doc(s) that where updated.
    This operation will either update all matched doc(s) or none.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteDocsByQuery(self, request, context):
    """*
    To delete doc(s) that matches given query.
    Returns no of doc(s) that where deleted.
    This operation will either delete all matched doc(s) or none.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ModifyDocs(self, request, context):
    """*
    To perform create, update or/and delete on multiple doc(s)
    Returns no of doc(s) that where deleted.
    This operation will modify all the provided doc(s) or none.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_DocServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetDoc': grpc.unary_unary_rpc_method_handler(
          servicer.GetDoc,
          request_deserializer=tickleDb_dot_document__pb2.GetDocRequest.FromString,
          response_serializer=tickleDb_dot_document__pb2.Doc.SerializeToString,
      ),
      'CreateDoc': grpc.unary_unary_rpc_method_handler(
          servicer.CreateDoc,
          request_deserializer=tickleDb_dot_document__pb2.CreateDocRequest.FromString,
          response_serializer=tickleDb_dot_document__pb2.CreateDocResponse.SerializeToString,
      ),
      'UpdateDoc': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateDoc,
          request_deserializer=tickleDb_dot_document__pb2.UpdateDocRequest.FromString,
          response_serializer=tickleDb_dot_document__pb2.UpdateDocResponse.SerializeToString,
      ),
      'DeleteDoc': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteDoc,
          request_deserializer=tickleDb_dot_document__pb2.DeleteDocRequest.FromString,
          response_serializer=tickleDb_dot_document__pb2.DeleteDocResponse.SerializeToString,
      ),
      'SearchDocs': grpc.unary_unary_rpc_method_handler(
          servicer.SearchDocs,
          request_deserializer=tickleDb_dot_document__pb2.SearchDocsRequest.FromString,
          response_serializer=tickleDb_dot_document__pb2.SearchDocsResponse.SerializeToString,
      ),
      'UpsertDoc': grpc.unary_unary_rpc_method_handler(
          servicer.UpsertDoc,
          request_deserializer=tickleDb_dot_document__pb2.UpsertDocRequest.FromString,
          response_serializer=tickleDb_dot_document__pb2.UpsertDocResponse.SerializeToString,
      ),
      'GetDocsBySqlQuery': grpc.unary_unary_rpc_method_handler(
          servicer.GetDocsBySqlQuery,
          request_deserializer=tickleDb_dot_document__pb2.GetDocsBySqlQueryRequest.FromString,
          response_serializer=tickleDb_dot_document__pb2.GetDocsBySqlQueryResponse.SerializeToString,
      ),
      'UpdateDocsByQuery': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateDocsByQuery,
          request_deserializer=tickleDb_dot_document__pb2.UpdateDocsByQueryRequest.FromString,
          response_serializer=tickleDb_dot_document__pb2.UpdateDocsByQueryResponse.SerializeToString,
      ),
      'DeleteDocsByQuery': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteDocsByQuery,
          request_deserializer=tickleDb_dot_document__pb2.DeleteDocsByQueryRequest.FromString,
          response_serializer=tickleDb_dot_document__pb2.DeleteDocsByQueryResponse.SerializeToString,
      ),
      'ModifyDocs': grpc.unary_unary_rpc_method_handler(
          servicer.ModifyDocs,
          request_deserializer=tickleDb_dot_document__pb2.ModifyDocsRequest.FromString,
          response_serializer=tickleDb_dot_document__pb2.ModifyDocsResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'com.mindtickle.storage.pb.tickleDb.DocService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
